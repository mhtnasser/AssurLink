<?php

namespace AppBundle\Repository;
use Doctrine\ORM\Query;
use Proxies\__CG__\AppBundle\Entity\User;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function getUser($login, $password)
    {
        $qb = $this->createQueryBuilder('u');

        $qb->where('u.login = :login')
            ->setParameter('login', $login)
            ->andWhere('u.password = :password')
            ->setParameter('password', $password);

        return $qb
            ->getQuery()
            ->getOneOrNullResult();

    }

    public function getUserWithZone(int $id)
    {
        $qb = $this->createQueryBuilder('u');

        // On fait une jointure avec l'entité Category avec pour alias « c »
        $qb
            ->innerJoin('u.zone', 'z')
            ->addSelect('z');
        $qb->where('z.id = :id')
            ->setParameter('id', $id);
        // Puis on filtre sur le nom des catégories à l'aide d'un IN

        // Enfin, on retourne le résultat
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getUserAndZone($login, $password)
    {
        $qb = $this->createQueryBuilder('u');

        // On fait une jointure avec l'entité Category avec pour alias « c »
        $qb
            ->innerJoin('u.zone', 'z')
            ->addSelect('z');
        $qb->where('u.login = :login')
            ->setParameter('login', $login)
            ->andWhere('u.password = :password')
            ->setParameter('password', $password);

        // Enfin, on retourne le résultat
        return $qb
            ->getQuery()
            ->getResult();
    }
}
